{"version":3,"sources":["components/Button.js","components/Header.js","components/CheckButton.js","components/Task.js","components/Tasks.js","components/AddTask.js","controllers/controller.js","controllers/userController.js","components/Home.js","components/Register.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","className","style","color","text","backgroundColor","defaultProps","Header","toggleShowAddTask","showAddTask","CheckButton","toggleCheck","taskID","checked","Task","task","onDelete","_id","done","title","body","Tasks","tasks","id","map","AddTask","onAdd","useState","setTitle","setBody","setDone","onSubmit","e","preventDefault","alert","htmlFor","type","value","onChange","target","placeholder","currentTarget","name","addTaskController","a","localStorage","hasOwnProperty","fetch","method","cors","headers","getItem","JSON","stringify","res","status","deleteTaskController","getTasksController","json","taskToggleController","require","config","addUserController","username","password","loginUser","data","setItem","token","success","verifyUser","Home","setShowAddTask","setTasks","render","setRender","verified","setVerified","useEffect","fetchData","protectComponent","addTask","console","log","deleteTask","taskToggleCheckbox","arr","obj","find","indexOf","to","jwt","decode","length","Register","setUsername","setPassword","Login","login","history","push","class","App","clear","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.290c04a9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n    const onClick = () => {\r\n        // console.log('clicked')\r\n        props.onClick()\r\n    }\r\n    return <button onClick={onClick} className='btn' style={style(props.color)}>{props.text}</button>\r\n}\r\n\r\nconst style = (color) => {\r\n    return {\r\n        backgroundColor: color\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'black',\r\n    text: 'button'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({toggleShowAddTask, showAddTask}) => {\r\n    const onClick = () => {\r\n        toggleShowAddTask()\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n\r\n            {/*<h1 style={headingStyle}> task tracker {props.title}</h1>*/}\r\n            <h1>task tracker</h1>\r\n            <Button color={!showAddTask ? 'green' : 'red'} text={!showAddTask ? 'Add' : 'Close'} onClick={onClick}/>\r\n\r\n            {/*<Button />*/}\r\n            {/*<Button color={'green'} text={'Hello2'}/>*/}\r\n            {/*<Button color={'green'} text={'Hello3'}/>*/}\r\n        </header>\r\n    )\r\n}\r\n\r\n// const headingStyle = {\r\n//     color: \"cadetblue\",\r\n//     backgroundColor: \"black\",\r\n//\r\n// }\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst CheckButton = ({toggleCheck, taskID, checked}) => {\r\n\r\n    return (\r\n        <Button onClick={() => toggleCheck(taskID)} text={checked ? '👌' : '👎'}/>\r\n    )\r\n}\r\n\r\nexport default CheckButton","import {FaTimes} from 'react-icons/fa'\r\nimport CheckButton from './CheckButton'\r\n\r\nconst Task = ({task, onDelete, toggleCheck}) => {\r\n    return (\r\n        <div className={\"task\"}>\r\n            {/*need to create arrow func because only function ref was passed down*/}\r\n            <CheckButton toggleCheck={toggleCheck} taskID={task._id} checked={task.done}/>\r\n            <div className=\"todotask\">\r\n                <h3>{task.title} <FaTimes onClick={() => onDelete(task._id)} style={{color: \"red\"}}/></h3>\r\n                <p>{task.body}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n// import PropTypes from 'prop-types'\r\n\r\n//to display everything in the list\r\nconst Tasks = ({tasks, onDelete, toggleCheck}) => {\r\n\r\n    return (\r\n        <div id={\"tasks\"}>\r\n            {tasks.map((task) => (<Task key={task._id} task={task} onDelete={onDelete} toggleCheck={toggleCheck}/>))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// Tasks.propTypes = {\r\n//     key: PropTypes.\r\n// }\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [done, setDone] = useState(false)\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        if (!title) {\r\n            alert('Enter a title')\r\n\r\n            return\r\n        }\r\n        onAdd({title, body, done})\r\n    }\r\n\r\n    return (\r\n        <form className={'add-form'} onSubmit={submitForm}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Title</label>\r\n                <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" placeholder={'description'} onChange={(e) => setBody(e.target.value)} value={body}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Status</label>\r\n                <input type=\"checkbox\" onChange={(e) => setDone(e.currentTarget.checked)} checked={done}/>\r\n            </div>\r\n            <input type=\"submit\" name=\"\" className=\"btn btn-block\" value={'Add Task'}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","const addTaskController = async (task) => {\n    if (!localStorage.hasOwnProperty('token')) {\n        return false\n    }\n    const res = await fetch('/api/tasks/add', {\n        method: 'PUT',\n        cors: 'same-origin',\n        headers: {\n            'Origin': `/`,\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        },\n        body: JSON.stringify(task)\n    })\n    return res.status === 200\n    \n}\n\nconst deleteTaskController = async (id) => {\n    if (!localStorage.hasOwnProperty('token')) {\n        return false\n    }\n    const res = await fetch('/api/tasks', {\n        method: 'DELETE',\n        cors: 'same-origin',\n        headers: {\n            'Origin': `/`,\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        },\n        body: JSON.stringify({_id: id})\n    })\n\n    return res.status === 200\n\n}\n\nconst getTasksController = async () => {\n    if (!localStorage.hasOwnProperty('token')) {\n        return false\n    }\n    const res = await fetch(`/api/tasks`, {\n        method: 'GET',\n        cors: 'same-origin',\n        headers: {\n            'Origin': `/`,\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n    })\n    return await res.json()\n}\n\nconst taskToggleController = async (id, done) => {\n    if (!localStorage.hasOwnProperty('token')) {\n        return false\n    }\n    const res = await fetch('/api/tasks', {\n        method: 'PUT',\n        cors: 'same-origin',\n        headers: {\n            'Origin': '/',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({_id: id, done: done})\n    })\n\n    return res.status === 200\n    \n}\n\nexport {addTaskController, deleteTaskController, getTasksController, taskToggleController}","require('dotenv').config()\r\n\r\nconst addUserController = async (username, password) => {\r\n    const res = await fetch('/api/users', {\r\n        method: 'POST',\r\n        cors: 'same-origin',\r\n        headers: {\r\n            'Origin': `/`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({username: username, password: password})\r\n    })\r\n    return res.status === 200\r\n}\r\n\r\n//logs in user, stores token in localStorage\r\nconst loginUser = async (username, password) => {\r\n    \r\n    const res = await fetch(`/api/login`, {\r\n        method: 'POST',\r\n        cors: 'same-origin',\r\n        headers: {\r\n            'Origin': `/`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({username: username, password: password})\r\n    })\r\n    if (res.status === 200) {\r\n        const data = await res.json()\r\n        localStorage.setItem(\"token\", data.token)\r\n        return {success: true, token: data.token}\r\n    } else {\r\n        return {success: false}\r\n    }\r\n}\r\n\r\nconst verifyUser = async () => {\r\n    const res = await fetch('/api/verify', {\r\n        method: 'GET',\r\n        cors: 'same-origin',\r\n        headers: {\r\n            'Origin': `/`,\r\n            'Content-Type': 'application/json',\r\n            'Authorization': localStorage.getItem('token')\r\n        }\r\n    })\r\n\r\n    return res.status === 200\r\n}\r\n\r\nexport {addUserController, loginUser, verifyUser}","import {useEffect, useState} from 'react'\r\n// import './index2.css'\r\nimport Header from './Header'\r\nimport Tasks from './Tasks'\r\nimport AddTask from './AddTask'\r\nimport {\r\n    addTaskController,\r\n    deleteTaskController,\r\n    getTasksController,\r\n    taskToggleController\r\n} from '../controllers/controller'\r\nimport jwt from 'jsonwebtoken'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {verifyUser} from \"../controllers/userController\";\r\n\r\nrequire('dotenv').config()\r\n\r\n\r\nfunction Home() {\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    //tasks is now available globally\r\n    const [tasks, setTasks] = useState([])\r\n    //variable to update the DOM, sometimes does it twice, too bad\r\n    const [render, setRender] = useState(false)\r\n    const [verified, setVerified] = useState(false)\r\n    // const [username, setUsername] = useState('')\r\n    // const username = jwt.decode(localStorage.getItem('token')).username\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setTasks(await getTasksController())\r\n            setVerified(await protectComponent())\r\n        }\r\n        fetchData()\r\n        \r\n\r\n        // setUsername(jwt.decode(localStorage.getItem('token')).username)\r\n    }, [render])\r\n\r\n    const toggleShowAddTask = () => setShowAddTask(!showAddTask)\r\n\r\n    const addTask = async (task) => {\r\n        console.log(tasks)\r\n        if (await addTaskController(task) === true) {\r\n            setTasks([...tasks, task])\r\n            setRender(!render)\r\n        }\r\n    }\r\n\r\n    const deleteTask = async (id) => {\r\n\r\n        console.log(tasks)\r\n        if (await deleteTaskController(id)) {\r\n            setRender(!render)\r\n            console.log('deleted ', id)\r\n        }\r\n\r\n    }\r\n\r\n    const taskToggleCheckbox = async (id) => {\r\n        let arr = [...tasks]\r\n        let obj = tasks.find((task) => {\r\n            return task._id === id\r\n        })\r\n        await taskToggleController(id, !arr[tasks.indexOf(obj)].done)\r\n        arr[tasks.indexOf(obj)].done = !arr[tasks.indexOf(obj)].done\r\n        setTasks(arr)\r\n    }\r\n\r\n    const protectComponent = async () => {\r\n        if (!localStorage.hasOwnProperty('token')) {\r\n            return true\r\n        }\r\n        return !(await verifyUser())\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            {verified ? (<Redirect to={'/login'}/>) : ''}\r\n            {localStorage.hasOwnProperty('token') ? (<h1>{jwt.decode(localStorage.getItem('token')).username}</h1>) : (\r\n                <p>not logged in</p>)}\r\n            <Header title='hello' toggleShowAddTask={toggleShowAddTask} showAddTask={showAddTask}/>\r\n            {showAddTask ? (<AddTask onAdd={addTask}/>) : ''}\r\n            {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} toggleCheck={taskToggleCheckbox}/>) : (\r\n                <p>No tasks</p>)}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from \"react\"\r\n\r\nimport { addUserController } from \"../controllers/userController\";\r\n\r\nfunction Register() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const addTask = async () => {\r\n        if (await addUserController(username, password)) {\r\n            console.log('success')\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n\r\n            <form className={'add-form'} onSubmit={addTask}>\r\n                <h1>Register</h1>\r\n                <div className=\"form-control\">\r\n                    <small>Username</small>\r\n                    <input type=\"text\" placeholder={'username'} onChange={(e) => setUsername(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <small>Password</small>\r\n                    <input type=\"text\" placeholder={'password'} onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n\r\n                <input type=\"submit\" name=\"\" className=\"btn btn-block\" value={'Register'} />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","import {useState} from 'react'\r\nimport {loginUser} from '../controllers/userController'\r\nimport '../loginstyles.css'\r\n\r\nfunction Login(props) {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const login = async () => {\r\n        const result = await loginUser(username, password)\r\n        if (result.success) {\r\n\r\n            console.log(props.history)\r\n            props.history.push('/')\r\n            // alert('logged in')\r\n        } else {\r\n            alert('no user found')\r\n        }\r\n    }\r\n    return (\r\n        <div id={'login'}>\r\n            <form id={'login-form'} onSubmit={login}>\r\n                <h1 class={'text-center'} id={'login-heading'}>Login</h1>\r\n                <div className=\"form-group\">\r\n                    <small htmlFor=\"\">Username</small>\r\n                    <input type=\"text\" className={'form-control'} onChange={(e) => setUsername(e.target.value)}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <small htmlFor=\"\">Password</small>\r\n                    <input type=\"password\" className={'form-control'} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n\r\n                <input type=\"submit\" name=\"\" className=\"btn btn-outline-dark submit-btn\" value={'Login'}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import {HashRouter, Link, Route, Switch} from 'react-router-dom'\r\n// import './index.css'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './index2.css'\r\nimport Home from './components/Home'\r\nimport Register from './components/Register'\r\nimport Login from './components/Login'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter>\r\n            <div className={'App'}>\r\n                <nav className={'nav nav-pills nav-fill'}>\r\n                    <Link className={'nav-link nav-item'} to={'/register'}>Register</Link>\r\n                    <Link className={'nav-link nav-item'} to={'/'}>Home</Link>        \r\n                    <Link className={'nav-link nav-item'} to={'/login'} onClick={() => localStorage.clear()}>Logout</Link>\r\n                    \r\n                \r\n                </nav>\r\n                <Switch>\r\n                    <Route exact path={'/'} component={Home}/>\r\n                    <Route path={'/register'} component={Register}/>\r\n                    <Route path={'/login'} component={Login}/>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
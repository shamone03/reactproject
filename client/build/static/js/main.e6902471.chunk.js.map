{"version":3,"sources":["components/Button.js","components/Header.js","components/CheckButton.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","className","style","color","text","backgroundColor","defaultProps","Header","toggleShowAddTask","showAddTask","CheckButton","toggleCheck","taskID","checked","Task","task","onDelete","_id","done","title","body","Tasks","tasks","map","AddTask","onAdd","useState","setTitle","setBody","setDone","onSubmit","e","preventDefault","alert","htmlFor","type","value","onChange","target","placeholder","currentTarget","name","require","config","App","setShowAddTask","setTasks","render","setRender","useEffect","getData","a","fetch","method","cors","headers","res","json","data","console","log","addTask","JSON","stringify","then","result","catch","err","length","id","filter","arr","obj","find","indexOf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6902471.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n    const onClick = () => {\r\n        // console.log('clicked')\r\n        props.onClick()\r\n    }\r\n    return <button onClick={onClick} className='btn' style={style(props.color)}>{props.text}</button>\r\n}\r\n\r\nconst style = (color) => {\r\n    return {\r\n        backgroundColor: color\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'black',\r\n    text: 'button'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ toggleShowAddTask, showAddTask }) => {\r\n    const onClick = () => {\r\n        toggleShowAddTask()\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n\r\n             {/*<h1 style={headingStyle}> task tracker {props.title}</h1>*/}\r\n            <h1>task tracker</h1>\r\n            <Button color={!showAddTask ? 'green' : 'red'} text={!showAddTask ? 'Add' : 'Close'} onClick={onClick}/>\r\n\r\n            {/*<Button />*/}\r\n            {/*<Button color={'green'} text={'Hello2'}/>*/}\r\n            {/*<Button color={'green'} text={'Hello3'}/>*/}\r\n        </header>\r\n    )\r\n}\r\n\r\n// const headingStyle = {\r\n//     color: \"cadetblue\",\r\n//     backgroundColor: \"black\",\r\n//\r\n// }\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport Button from './Button'\r\nconst CheckButton = ({ toggleCheck, taskID, checked }) => {\r\n\r\n    return (\r\n        <Button onClick={() => toggleCheck(taskID)} text={checked ? 'ðŸ‘Œ' : 'ðŸ‘Ž' }/>\r\n    )\r\n}\r\n\r\nexport default CheckButton","import { FaTimes } from 'react-icons/fa'\r\nimport CheckButton from './CheckButton'\r\nconst Task = ({ task, onDelete, toggleCheck }) => {\r\n    return (\r\n        <div className={\"task\"}>\r\n            {/*need to create arrow func because only function ref was passed down*/}\r\n            <CheckButton toggleCheck={toggleCheck} taskID={task._id} checked={task.done}/>\r\n            <div className=\"todotask\">\r\n                <h3>{task.title} <FaTimes onClick={() => onDelete(task._id)} style={{color: \"red\"}}/></h3>\r\n                <p>{task.body}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n// import PropTypes from 'prop-types'\r\n\r\n//to display everything in the list\r\nconst Tasks = ({ tasks, onDelete, toggleCheck }) => {\r\n\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (<Task key={task._id} task={task} onDelete={onDelete} toggleCheck={toggleCheck}/>))}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n// Tasks.propTypes = {\r\n//     key: PropTypes.\r\n// }\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [done, setDone] = useState(false)\r\n\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        if (!title) {\r\n            alert('Enter a title')\r\n            return\r\n        }\r\n        onAdd({ title, body, done })\r\n    }\r\n\r\n    return (\r\n        <form className={'add-form'} onSubmit={submitForm}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Title</label>\r\n                <input type=\"text\" value={ title } onChange={(e) => setTitle(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Task</label>\r\n                <input type=\"text\" placeholder={'description'} onChange={(e) => setBody(e.target.value)} value={ body } />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"\">Status</label>\r\n                <input type=\"checkbox\" onChange={(e) => setDone(e.currentTarget.checked)} checked={ done }/>\r\n            </div>\r\n            <input type=\"submit\" name=\"\" className=\"btn btn-block\" value={'Add Task'}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import {useState, useEffect} from \"react\"\r\nimport './index.css'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from \"./components/AddTask\"\r\nimport React from 'react'\r\nimport Button from \"./components/Button\"\r\nrequire('dotenv').config()\r\n\r\n\r\nfunction App() {\r\n\tconst [showAddTask, setShowAddTask] = useState(false)\r\n\t//tasks is now available globally\r\n\tconst [tasks, setTasks] = useState([])\r\n\t//variable to update the DOM, sometimes does it twice, too bad\r\n\tconst [render, setRender] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\ttry {\r\n\r\n\t\t\t\tconst res = await fetch(`/tasks`, {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcors: 'same-origin',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Origin': `/`,\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tconst data = await res.json()\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tsetTasks([...data])\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log('json error')\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetData()\r\n\t}, [render])\r\n\r\n\r\n\tconst toggleShowAddTask = () => {\r\n\t\tsetShowAddTask(!showAddTask)\r\n\t}\r\n\r\n\tconst addTask = async (task) => {\r\n\t\t// task.id = tasks.length + 1\r\n\t\t// getData()\r\n\t\tconsole.log(task)\r\n\t\tconsole.log(tasks)\r\n\r\n\r\n\r\n\t\tfetch('/tasks', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcors: 'same-origin',\r\n\t\t\theaders: {\r\n\t\t\t\t'Origin': `/`,\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(task)\r\n\t\t}).then(res => {\r\n\t\t\tres.text()\r\n\t\t}).then(result => {\r\n\t\t\tconsole.log(result)\r\n\t\t\tsetTasks([...tasks, task])\r\n\t\t\tsetRender(!render)\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\r\n\r\n\r\n\r\n\r\n\t}\r\n\t//deletes the task\r\n\tconst deleteTask = (id) => {\r\n\t\tconsole.log('delete ', id)\r\n\t\tsetTasks(tasks.filter((task) => {\r\n\t\t\treturn task.id !== id\r\n\t\t}))\r\n\t}\r\n\r\n\tconst taskToggleCheckbox = (id) => {\r\n\t\tlet arr = [...tasks]\r\n\t\tlet obj = tasks.find((task) => {\r\n\t\t\t// task._id === id ? console.log(task) : ''\r\n\t\t\treturn task._id === id\r\n\t\t})\r\n\t\tarr[tasks.indexOf(obj)].done = !arr[tasks.indexOf(obj)].done\r\n\t\tsetTasks(arr)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header title='hello' toggleShowAddTask={toggleShowAddTask} showAddTask={showAddTask}/>\r\n\t\t\t{/*{<AddTask onAdd={addTask}/>}*/}\r\n\t\t\t{showAddTask ? (<AddTask onAdd={addTask}/>) : ''}\r\n\t\t\t{tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} toggleCheck={taskToggleCheckbox}/>) : (<p>No tasks</p>)}\r\n\t\t\t{/*{getData()}*/}\r\n\t\t\t<Button onClick={() => console.log('clicked')}/>\r\n\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\n\r\n// class App extends React.Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\t<Header/>\r\n// \t\t\t</div>\r\n// \t\t)\r\n// \t}\r\n// }\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}